require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
  
  platform :ios, '12.4'
  install! 'cocoapods', :deterministic_uuids => false
  
  target 'Mentis' do
    config = use_native_modules!
  
    # Flags change depending on the env values.
    flags = get_default_flags()
  
    use_react_native!(
      :path => config[:reactNativePath],
      # to enable hermes on iOS, change false to true and then install pods
      :hermes_enabled => flags[:hermes_enabled],
      :fabric_enabled => flags[:fabric_enabled],
      # An absolute path to your application root.
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )
  
    target 'MentisTests' do
      inherit! :complete
      # Pods for testing
    end

    pod 'JWT', '3.0.0-beta.12'
    

    permissions_path = '../node_modules/react-native-permissions/ios'

    pod 'RNEventEmitter', :path => "../node_modules/react-native-events"
    pod 'RNSpotifyRemote', :path => '../node_modules/react-native-spotify-remote'

    #pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
    #pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
    #pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"

    #pod 'React-RCTPushNotification', :path => '../node_modules/react-native/Libraries/PushNotificationIOS'
    #pod 'React-RCTPushNotification', :path => '../node_modules/react-native/Libraries/PushNotificationIOS'
    #pod 'RNSpotifyRemote', :path => '../node_modules/react-native-spotify-remote'
    #pod 'React', :path => '../node_modules/react-native', :subspecs => ['RCTPushNotification',]
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    # use_flipper!()

    def find_and_replace(dir, findstr, replacestr)
        Dir[dir].each do |name|
            text = File.read(name)
            replace = text.gsub(findstr,replacestr)
            if text != replace
                puts "Fix: " + name
                File.open(name, "w") { |file| file.puts replace }
                STDOUT.flush
            end
        end
        Dir[dir + '*/'].each(&method(:find_and_replace))
      end
  
    post_install do |installer|

        find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                "_modifierFlags",
                "_modifierEventFlags")
        find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                "_modifiedInput",
                "_modifiedEventInput")
        find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                "_isKeyDown",
                "_isKeyEventDown")
        find_and_replace("../node_modules/react-native/React/DevSupport/RCTPackagerClient.h",
                "handleNotification",
                "handlePackageNotification")

        find_and_replace("../node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm",
                "handleNotification",
                "handlePackageNotification")

        react_native_post_install(installer)
        __apply_Xcode_12_5_M1_post_install_workaround(installer)
    end
  end
  